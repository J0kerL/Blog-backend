# 服务器端口配置
server:
  port: 8080
  servlet:
    context-path: /api
# Spring 配置
spring:
  application:
    name: MyBlog
  profiles:
    active: dev
  # 数据源配置
  datasource:
    driver-class-name: ${blog.datasource.driver-class-name}
    url: jdbc:mysql://${blog.datasource.host}:${blog.datasource.port}/${blog.datasource.database}?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true
    username: ${blog.datasource.username}
    password: ${blog.datasource.password}
  data:
    redis:
      host: ${blog.data.redis.host}
      port: ${blog.data.redis.port}
      password: ${blog.data.redis.password}
      database: ${blog.data.redis.database}

  # 配置邮件服务（使用 QQ 邮箱的 SMTP 服务器）
  mail:
    # 邮件服务器主机为 smtp.qq.com
    host: smtp.qq.com
    username: 2210054954@qq.com
    # 授权码
    password: lzdenxvjursldhhc
    default-encoding: UTF-8
    protocol: smtp
    port: 465
    properties:
      mail:
        # SMTP 协议的属性
        smtp:
          # Socket 工厂使用的端口为 465
          socketFactory:
            port: 465
            # 使用 SSL Socket 工厂进行加密通信
            class: javax.net.ssl.SSLSocketFactory
            # 表示开启 DEBUG 模式，这样，邮件发送过程的日志会在控制台打印出来，方便排查错误
            debug: true
          ssl:
            # 启用 SSL 加密
            enable: true
# MyBatis 配置
mybatis:
  # Mapper XML 文件配置
  mapper-locations: classpath:mapper/*.xml
  # 实体类包路径
  type-aliases-package: com.blog.entity
  # 开启驼峰命名自动映射
  configuration:
    map-underscore-to-camel-case: true
    # 开启SQL日志
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
# 日志配置
logging:
  level:
    com:
      blog:
        mapper: debug
        controller: info
        service: info
    # 添加MyBatis的SQL日志级别
    org.apache.ibatis: debug
    java.sql: debug
blog:
  jwt:
    # 设置jwt签名加密时使用的秘钥
    secret-key: DiamondBlog
    # 设置jwt过期时间 2小时
    ttl: 7200000
    # 设置前端传递过来的令牌名称
    token-name: Authorization
  aliyun:
    oss:
      endpoint: ${blog.alioss.endpoint}
      access-key-id: ${blog.alioss.access-key-id}
      access-key-secret: ${blog.alioss.access-key-secret}
      bucket-name: ${blog.alioss.bucket-name}
# springdoc-openapi配置
springdoc:
  # Swagger原生UI的配置(Knife4j增强UI通过/doc.html访问)
  swagger-ui:
    # 原生Swagger UI的访问路径
    path: /swagger-ui.html
    # API 标签按字母顺序排序(可选：alpha-字母序，method-方法名)
    tags-sorter: alpha
    # 接口方法按字母顺序排序(可选：alpha, method)
    operations-sorter: alpha
  # OpenAPI 规范文档的生成配置
  api-docs:
    # OpenAPI 规范 JSON 数据的访问路径(默认值)
    path: /v3/api-docs
    # 开启文档功能
    enabled: true
# Knife4j增强功能配置
knife4j:
  # 是否启用 Knife4j
  enable: true
  setting:
    # 设置界面语言为中文
    language: zh_cn
    # 重命名SwaggerModel名称,默认为Swagger Models
    swagger-model-name: 实体列表
cors:
  # Vue 开发服务器的默认地址
  allowed-origins: http://localhost:3000